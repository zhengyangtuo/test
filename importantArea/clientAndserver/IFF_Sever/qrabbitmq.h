#ifndef QRABBITMQ_H
#define QRABBITMQ_H

#include <QObject>
#include <QCoreApplication>
#include <QStringList>
#include <QDebug>
#include "QAMQP/qamqpclient.h"
#include "QAMQP/qamqpexchange.h"
#include "QAMQP/qamqpqueue.h"

/*QRabbitMQ是QAMQP客户端的一个封装，与消息队列建立连接，发送数据至消息队列服务器、接收消息队列数据
 * Example:
 * QRabbitMQ *m_QRabbitMQ = new QRabbitMQ();
 * m_QRabbitMQ.SetServerParam("127.0.0.1","5672");
 * m_QRabbitMQ.SetRabbitClientParam(bindingKeyList);
 * m_netConnector->start()//启动消息队列连接
 * */
class QRabbitMQ : public QObject
{
    Q_OBJECT
public:
    /******************************************************************
     * 函数功能:构造消息队列 默认为direct的交换机 交换机名称为direct_exchanger
     * 输入参数:父对象指针
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    explicit QRabbitMQ(QObject *parent = nullptr);

    /******************************************************************
     * 函数功能:设置RabbitMQ服务器的ip和端口号
     * 输入参数:ip IP地址;port 端口号
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void SetServerParam(const QString &ip, const quint16 port);
    /******************************************************************
     * 函数功能:设置当前消息队列的绑定RoutingKey列表
     * 输入参数:bindingKeyList RoutingKey的列表
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void SetRabbitClientParam(const QStringList &bindingKeyList);

signals:
    /******************************************************************
     * 函数功能:当前消息队列接收到消息的信号
     * 输入参数:msg 接收到的字节流消息
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void MsgSigal(const QByteArray &msg);

    /******************************************************************
     * 函数功能:消息队列发生错误的槽函数
     * 输入参数:error 错误的类型
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void Error(QAMQP::Error error);
    /******************************************************************
     * 函数功能:当连接建立时发出信号给UI界面
     * 输入参数:error 错误的类型
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void readyConnect();


public slots:
    /******************************************************************
     * 函数功能:配置好消息队列参数后启动消息队列
     * 输入参数:无
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void Start();

    /******************************************************************
     * 函数功能:向消息队列服务器交换机发送消息 一般做槽函数使用
     * 输入参数:routingKey 发送的消息的RoutingKey;msg 需要发送的字节流消息
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void SendMsg(const QString &routingKey, const QByteArray &msg);

private slots:
    /******************************************************************
     * 函数功能:连接服务成功获取交换机 声明交换机
     * 输入参数:无
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void ClientConnected();

    /******************************************************************
     * 函数功能:交换机声明成功 创建消息队列
     * 输入参数:无
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void ExchangeDeclared();

    /******************************************************************
     * 函数功能:设置消息队列，绑定RoutingKey
     * 输入参数:无
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void QueueDeclared();

    /******************************************************************
     * 函数功能:处理消息队列接收到的消息，并将获得的消息通过msgSignal信号发送出去
     * 输入参数:无
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void MessageReceived();

    /******************************************************************
     * 函数功能:接收消息队列客户端的错误，并发送Error的信号
     * 输入参数:无
     * 输出参数:无
     * 返回值:无
     * ***************************************************************/
    void ErrorDealing(QAMQP::Error error);


private:

    //RabbitMQ客户端
    QAmqpClient m_client;

    //消息队列绑定的RoutingKey列表 一次可以绑定多个
    QStringList m_bindingKeyList;

    //RabbitMQ服务器ip地址及端口号
    QString m_serverIP;
    quint16 m_serverPort;

    //交换机名称
    QString m_exchangerName;

};

#endif // QRABBITMQ_H
